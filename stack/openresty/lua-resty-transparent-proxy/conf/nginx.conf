worker_processes 1;
events {
    worker_connections 1024;
}
http {
    lua_package_path "$prefix/lua/?.lua;;";
    server {
        listen 80 default_server;
        listen 443 ssl;

        resolver 127.0.0.11 valid=60s;

        ssl_certificate /var/cert/ca.crt;
        ssl_certificate_key /var/cert/plain.key;

        ssl_certificate_by_lua_block {
            local ssl = require "ngx.ssl"
            local gen_ssl = require "ssl_generator"

            local ok, err = ssl.clear_certs()
            if not ok then
                ngx.log(ngx.ERR, "failed to clear existing (fallback) certificates")
                return ngx.exit(ngx.ERROR)
            end

            local webdomain = ssl.server_name()
            local pem, privatekey, bundle = gen_ssl.get_ssl(webdomain)

            local der_cert_chain, err = ssl.cert_pem_to_der(bundle)
            if not der_cert_chain then
                ngx.log(ngx.ERR, "failed to convert certificate chain ",
                        "from PEM to DER: ", err)
                return ngx.exit(ngx.ERROR)
            end

            local ok, err = ssl.set_der_cert(der_cert_chain)
            if not ok then
                ngx.log(ngx.ERR, "failed to set DER cert: ", err)
                return ngx.exit(ngx.ERROR)
            end

            local der_pkey, err = ssl.priv_key_pem_to_der(privatekey)
            if not der_pkey then
                ngx.log(ngx.ERR, "failed to convert private key ", "from PEM to DER: ", err)
                return ngx.exit(ngx.ERROR)
            end

            local ok, err = ssl.set_der_priv_key(der_pkey)
            if not ok then
                ngx.log(ngx.ERR, "failed to set DER private key: ", err)
                return ngx.exit(ngx.ERROR)
            end
        }

        location / {
            proxy_pass $scheme://$host$request_uri;
        }
    }
}